{"version":3,"sources":["../../../../../src/test/integration/routes/health/health.spec.js"],"names":["webhooksClient","bluebird","validatePromisified","promisify","validate","bind","describe","it","done","clientResult","getHealthData"],"mappings":";;AAAA;;IAAYA,c;;AACZ;;;;AACA;;IAAYC,Q;;AACZ;;;;;;;;AAEA,IAAIC,sBAAsBD,SAASE,SAAT,CAAmB,cAAIC,QAAJ,CAAaC,IAAb,eAAnB,CAA1B;;AAEAC,SAAS,cAAT,EAAyB,MAAI;;AAE3BC,KAAG,2BAAH;AAAA,iCAAgC,WAAOC,IAAP,EAAc;AAC5C,UAAIC,eAAe,MAAMT,eAAeU,aAAf,CAA6B,WAA7B,CAAzB;AACA,YAAMR,oBAAoBO,YAApB,yBAAN;AACAD;AACD,KAJD;;AAAA;AAAA;AAAA;AAAA;AAMD,CARD","file":"health.spec.js","sourcesContent":["import * as webhooksClient from 'client/webhooksClient';\nimport Joi from 'joi';\nimport * as bluebird from 'bluebird';\nimport {healthResponse as healthResponseSchema} from 'schemas/health/health';\n\nlet validatePromisified = bluebird.promisify(Joi.validate.bind(Joi));\n\ndescribe('health route', ()=>{\n\n  it('should return health data', async (done)=>{\n    let clientResult = await webhooksClient.getHealthData('faketoken');\n    await validatePromisified(clientResult, healthResponseSchema);\n    done();\n  });\n\n});\n"]}