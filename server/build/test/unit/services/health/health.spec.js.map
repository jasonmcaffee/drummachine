{"version":3,"sources":["../../../../../src/test/unit/services/health/health.spec.js"],"names":["bluebird","validatePromisified","promisify","validate","bind","describe","it","result","getHealth","validateResult","expect","toEqual"],"mappings":";;AAAA;;AACA;;AACA;;;;AACA;;IAAYA,Q;;;;;;;;AAEZ,IAAIC,sBAAsBD,SAASE,SAAT,CAAmB,cAAIC,QAAJ,CAAaC,IAAb,eAAnB,CAA1B;;AAEAC,SAAS,gBAAT,EAA2B,MAAI;;AAE7BC,KAAG,0DAAH,oBAA+D,aAAU;AACvE,QAAIC,SAAS,MAAM,gBAAcC,SAAd,EAAnB;AACA,QAAIC,iBAAiB,MAAMR,oBAAoBM,MAApB,0BAA3B;AACAG,WAAOD,cAAP,EAAuBE,OAAvB,CAA+B,IAA/B;AACD,GAJD;AAKD,CAPD","file":"health.spec.js","sourcesContent":["import {service as healthService} from 'services/health/health';\nimport {healthResponse as healthResponseSchema} from 'schemas/health/health';\nimport Joi from 'joi';\nimport * as bluebird from 'bluebird';\n\nlet validatePromisified = bluebird.promisify(Joi.validate.bind(Joi));\n\ndescribe('health service', ()=>{\n\n  it('should provide health data which adheres to a joi schema', async ()=>{\n    let result = await healthService.getHealth();\n    let validateResult = await validatePromisified(result, healthResponseSchema);\n    expect(validateResult).toEqual(null);\n  });\n});\n"]}