{"version":3,"sources":["../../../src/routes/health/healthData.js"],"names":["method","path","config","description","notes","tags","validate","response","schema","handler","request","reply","result","getHealth"],"mappings":";;;;;;AAAA;;AACA;;;;kBAEe;AACbA,UAAQ,KADK;AAEbC,QAAM,iBAFO;AAGbC,UAAQ;AACNC,iBAAa,yFADP;AAEN,QAAIC,KAAJ,GAAa;AACX,aAAO,KAAKD,WAAZ;AACD,KAJK;AAKNE,UAAM,CAAC,KAAD,CALA,EAKS;;AAEfC,cAAU;AACN;AACA;AACA;AACA;AACA;AALM,KAPJ;AAcNC,cAAU;AACRC;AADQ,KAdJ;AAiBNC;AAAA,mCAAS,WAAOC,OAAP,EAAgBC,KAAhB,EAA0B;AACjC,YAAIC,SAAS,MAAM,gBAAcC,SAAd,EAAnB;AACA,eAAOF,MAAMC,MAAN,CAAP;AACD,OAHD;;AAAA;AAAA;AAAA;AAAA;AAjBM;AAHK,C","file":"healthData.js","sourcesContent":["import {service as healthService} from 'services/health/health.js';\nimport {healthResponse as healthResponseSchema} from 'schemas/health/health';\n\nexport default {\n  method: 'GET',\n  path: '/v1/health/data',\n  config: {\n    description: 'gets the system status data and returns as a json object, regardless of health status. ',\n    get notes () {\n      return this.description;\n    },\n    tags: ['api'], // api tag is for hapi swagger generation\n\n    validate: {\n        // payload: someRequestBodyPayloadSchema,\n        // params: {\n        //     namespace: e.g if your url was '/v1/health/{namespace}/{key}' this would validate the namespace value,\n        //     key: keyJoiSchema\n        // }\n    },\n    response: {\n      schema: healthResponseSchema\n    },\n    handler: async (request, reply) => {\n      let result = await healthService.getHealth();\n      return reply(result);\n    }\n  }\n};\n"]}