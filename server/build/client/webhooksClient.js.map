{"version":3,"sources":["../../src/client/webhooksClient.js"],"names":["rest","logger","hapiBabelUrl","client","hapiBabelBaseline","url","getHealthData","token","Promise","resolve","reject","log","get","timeout","getTimeout","header","end","result","status","error","body","JSON","stringify"],"mappings":";;;;;;;AAAA;;IAAYA,I;;AACZ;;AACA;;IAAYC,M;;;;AAEZ,IAAIC,eAAe,eAAOC,MAAP,CAAcC,iBAAd,CAAgCC,GAAnD;;AAEA;;;;;;AAMO,MAAMC,wCAAiBC,KAAD,IAAS;AACpC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACpC,QAAIL,MAAMH,eAAe,iBAAzB;AACAD,WAAOU,GAAP,CAAY,kCAAiCN,GAAI,EAAjD;AACAL,SAAKY,GAAL,CAASP,GAAT,EACGQ,OADH,CACW,eAAOV,MAAP,CAAcC,iBAAd,CAAgCU,UAD3C,EAEGC,MAFH,CAEU,EAAC,iBAAiB,YAAYR,KAA9B,EAAqC,gBAAgB,kBAArD,EAFV,EAGGS,GAHH,CAGOC,UAAQ;AACX,UAAIA,OAAOC,MAAP,KAAkB,GAAlB,IAAyBD,OAAOE,KAApC,EAA2C;AACzClB,eAAOkB,KAAP,CAAa,2CAAb,EAA0DF,OAAOC,MAAjE,EAAyE,UAAzE,EAAqFD,OAAOG,IAA5F;AACAV,eAAOO,OAAOE,KAAd;AACD,OAHD,MAGO;AACLlB,eAAOU,GAAP,CAAY,2CAA0CU,KAAKC,SAAL,CAAeL,OAAOG,IAAtB,CAA4B,EAAlF;AACAX,gBAAQQ,OAAOG,IAAf;AACD;AACF,KAXH;AAYD,GAfM,CAAP;AAiBD,CAlBM","file":"webhooksClient.js","sourcesContent":["import * as rest from 'unirest';\nimport {config} from 'config/config';\nimport * as logger from 'logger';\n\nlet hapiBabelUrl = config.client.hapiBabelBaseline.url;\n\n/**\n * HTTP GET /v1/health/data\n * Retrieves server's current health data, including config, subsystem status, os status, etc.\n * @param token\n * @returns {Promise}\n */\nexport const getHealthData = (token)=>{\n  return new Promise((resolve, reject)=>{\n    let url = hapiBabelUrl + '/v1/health/data';\n    logger.log(`getting health data using url: ${url}`);\n    rest.get(url)\n      .timeout(config.client.hapiBabelBaseline.getTimeout)\n      .header({'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json'})\n      .end(result=>{\n        if (result.status !== 200 || result.error) {\n          logger.error('Error response from hapi babel: \\nStatus:', result.status, ' \\nBody:', result.body);\n          reject(result.error);\n        } else {\n          logger.log(`Response received from /v1/health/data: ${JSON.stringify(result.body)}`);\n          resolve(result.body);\n        }\n      });\n  });\n\n};\n"]}